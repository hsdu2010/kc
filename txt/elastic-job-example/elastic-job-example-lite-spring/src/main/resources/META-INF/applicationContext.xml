<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:reg="http://www.dangdang.com/schema/ddframe/reg" 
    xmlns:job="http://www.dangdang.com/schema/ddframe/job" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd 
                        http://www.dangdang.com/schema/ddframe/reg 
                        http://www.dangdang.com/schema/ddframe/reg/reg.xsd 
                        http://www.dangdang.com/schema/ddframe/job 
                        http://www.dangdang.com/schema/ddframe/job/job.xsd 
                        ">
    <context:component-scan base-package="com.dangdang.ddframe.job.example" />
    <context:property-placeholder location="classpath:conf/*.properties" />

    <!-- 事件追踪的数据源配置 -->
    <bean id="elasticJobLog" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${event.rdb.driver}"/> <!-- driver class-->
        <property name="url" value="${event.rdb.url}"/> <!-- driver url-->
        <property name="username" value="${event.rdb.username}"/> <!-- 用户名-->
        <property name="password" value="${event.rdb.password}"/> <!-- 密码-->
    </bean>

    <!-- 注册中心 -->
    <!--
        id : 注册中心id
        server-lists ：zk的连接地址 localhost:2181,localhost:2182
        namespace ：Zookeeper的命名空间
        base-sleep-time-milliseconds: 等待重试的间隔时间的初始值,默认 1000
        max-sleep-time-milliseconds: 等待重试的间隔时间的最大值 默认 3000
        max-retries ： 最大重试次数
     -->
    <reg:zookeeper
            id="regCenter"
            server-lists="${serverLists}"
            namespace="${namespace}"
            base-sleep-time-milliseconds="${baseSleepTimeMilliseconds}"
            max-sleep-time-milliseconds="${maxSleepTimeMilliseconds}"
            max-retries="${maxRetries}"
    />

    <!--
    简单任务配置
    jobName： 作业名称 必填
    class 作业实现类，需实现ElasticJob接口 必填
    job-ref	 作业关联的beanId，该配置优先级大于class属性配置 必填
    registry-center-ref 注册中心Bean的引用，需引用reg:zookeeper的声明 必填
    cron cron表达式，用于控制作业触发时间 必填
    sharding-total-count 作业分片总数  必填
    sharding-item-parameters 分片序列号和参数用等号分隔，多个键值对用逗号分隔 分片序列号从0开始，不可大于或等于作业分片总数
    job-instance-id 作业实例主键，同IP可运行实例主键不同, 但名称相同的多个作业实例
    monitor-execution 监控作业运行时状态
    monitor-port 作业监控端口
    failover 是否开启失效转移
    misfire 是否开启错过任务重新执行
    description 作业描述信息
    disabled 作业是否禁止启动
    overwrite 本地配置是否可覆盖注册中心配置
    event-trace-rdb-data-source 作业事件追踪的数据源Bean引用
    -->
    <job:simple id="${simple.id}"
                class="${simple.class}"
                registry-center-ref="regCenter"
                sharding-total-count="${simple.shardingTotalCount}"
                cron="${simple.cron}"
                sharding-item-parameters="${simple.shardingItemParameters}"
                monitor-execution="${simple.monitorExecution}"
                monitor-port="${simple.monitorPort}"
                failover="${simple.failover}"
                description="${simple.description}"
                disabled="${simple.disabled}"
                overwrite="${simple.overwrite}"
    />
    <!--  event-trace-rdb-data-source="elasticJobLog"-->


    <!--
  流式任务配置
  jobName： 作业名称 必填
  class 作业实现类，需实现ElasticJob接口 必填
  job-ref	 作业关联的beanId，该配置优先级大于class属性配置 必填
  registry-center-ref 注册中心Bean的引用，需引用reg:zookeeper的声明 必填
  cron cron表达式，用于控制作业触发时间 必填
  sharding-total-count 作业分片总数  必填
  sharding-item-parameters 分片序列号和参数用等号分隔，多个键值对用逗号分隔 分片序列号从0开始，不可大于或等于作业分片总数
  job-instance-id 作业实例主键，同IP可运行实例主键不同, 但名称相同的多个作业实例
  monitor-execution 监控作业运行时状态
  monitor-port 作业监控端口
  failover 是否开启失效转移
  misfire 是否开启错过任务重新执行
  description 作业描述信息
  disabled 作业是否禁止启动
  overwrite 本地配置是否可覆盖注册中心配置
  event-trace-rdb-data-source 作业事件追踪的数据源Bean引用
  streaming-process 是否流式处理数据 如果流式处理数据, 则fetchData不返回空结果将持续执行作业 如果非流式处理数据, 则处理数据完成后作业结束
  -->
    <job:dataflow
            id="${dataflow.id}"
            class="${dataflow.class}"
            registry-center-ref="regCenter"
            sharding-total-count="${dataflow.shardingTotalCount}"
            cron="${dataflow.cron}"
            sharding-item-parameters="${dataflow.shardingItemParameters}"
            monitor-execution="${dataflow.monitorExecution}"
            failover="${dataflow.failover}"
            max-time-diff-seconds="${dataflow.maxTimeDiffSeconds}"
            streaming-process="${dataflow.streamingProcess}"
            description="${dataflow.description}"
            disabled="${dataflow.disabled}"
            overwrite="${dataflow.overwrite}"
    />
    <!-- event-trace-rdb-data-source="elasticJobLog"-->
    <!-- use absolute path to run script job -->
    <!--
    <job:script id="${script.id}" registry-center-ref="regCenter" script-command-line="${script.scriptCommandLine}" sharding-total-count="${script.shardingTotalCount}" cron="${script.cron}" sharding-item-parameters="${script.shardingItemParameters}" description="${script.description}" overwrite="${script.overwrite}" />
    -->
</beans>
